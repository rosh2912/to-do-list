{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","React","createElement","onClick","onChecked","id","text","InputArea","_useState","useState","_useState2","_slicedToArray","inputText","setInputText","className","onChange","event","newValue","target","value","type","onAdd","App","items","setItems","deleteItem","prevItems","filter","item","index","concat","_toConsumableArray","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"wNAceA,MAZf,SAAkBC,GAChB,OACEC,IAAAC,cAAA,OACEC,QAAS,WACPH,EAAMI,UAAUJ,EAAMK,MAGxBJ,IAAAC,cAAA,UAAKF,EAAMM,QCgBFC,MAvBf,SAAmBP,GACjB,IAAAQ,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAO9B,OACET,IAAAC,cAAA,OAAKY,UAAU,QACbb,IAAAC,cAAA,SAAOa,SAPX,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAKoBG,KAAK,OAAOD,MAAOP,IAClDX,IAAAC,cAAA,UACEC,QAAS,WACPH,EAAMqB,MAAMT,GACZC,EAAa,MAGfZ,IAAAC,cAAA,YAAM,UCwBCoB,MAvCf,WACE,IAAAd,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/Be,EAAKb,EAAA,GAAEc,EAAQd,EAAA,GAQtB,SAASe,EAAWpB,GAClBmB,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUxB,QAKvB,OACEJ,IAAAC,cAAA,OAAKY,UAAU,aACbb,IAAAC,cAAA,OAAKY,UAAU,WACbb,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAACK,EAAS,CAACc,MAnBf,SAAiBT,GACfY,GAAS,SAACE,GACR,MAAM,GAANI,OAAAC,YAAWL,GAAS,CAAEd,UAkBtBX,IAAAC,cAAA,WACED,IAAAC,cAAA,UACGqB,EAAMS,KAAI,SAACC,EAAUJ,GAAK,OACzB5B,IAAAC,cAACH,EAAQ,CACPmC,IAAKL,EACLxB,GAAIwB,EACJvB,KAAM2B,EACN7B,UAAWqB,WC9BzBU,IAASC,OAAOnC,IAAAC,cAACoB,EAAG,MAAKe,SAASC,eAAe,U","file":"static/js/main.6067bbec.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ToDoItem(props) {\n  return (\n    <div\n      onClick={() => {\n        props.onChecked(props.id);\n      }}\n    >\n      <li>{props.text}</li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\n\nfunction InputArea(props) {\n  const [inputText, setInputText] = useState(\"\");\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  return (\n    <div className=\"form\">\n      <input onChange={handleChange} type=\"text\" value={inputText} />\n      <button\n        onClick={() => {\n          props.onAdd(inputText);\n          setInputText(\"\");\n        }}\n      >\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  function addItem(inputText) {\n    setItems((prevItems) => {\n      return [...prevItems, inputText];\n    });\n  }\n\n  function deleteItem(id) {\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea onAdd={addItem} />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: I have extracted the Input Area, including the <input> and\n//<button> elements into a seperate Component called InputArea.\n//Your job is to make the app work as it did before but this time with the\n//InputArea as a seperate Component.\n\n// DO NOT: Modify the ToDoItem.jsx\n// DO NOT: Move the input/button elements back into the App.jsx\n\n//Hint 1: You will need to think about how to manage the state of the input element\n//in InputArea.jsx.\n//Hint 2: You will need to think about how to pass the input value back into\n//the addItem() function in App.jsx.\n"],"sourceRoot":""}